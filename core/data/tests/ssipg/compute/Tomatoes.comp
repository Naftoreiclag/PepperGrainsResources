#version 430
layout(local_size_x = 8, local_size_y = 8) in;

layout(binding = 3) uniform atomic_uint count;

layout(std430) buffer InstanceBuffer {
    int instanceCoords[];
};

layout(std430) buffer HtpedBuffer {
    float partDesc[];
};

layout(rgba32f) uniform readonly image2D instanceImage;
layout(rgba32f) uniform readonly image2D diffuseImage;
layout(rgba32f) uniform readonly image2D orientImage;

void main() {
    
    ivec2 pixelCoords = ivec2(gl_GlobalInvocationID.xy);
    
    vec4 pColor = imageLoad(instanceImage, pixelCoords);
    
    if(pColor.r > 0) {
        uint ii = atomicCounterIncrement(count);
        
        if(ii < instanceCoords.length()) {
            instanceCoords[ii] = pixelCoords.x | (pixelCoords.y << 16);
            
            vec4 pDiffuse = imageLoad(diffuseImage, pixelCoords);
            
            ii *= 4;
            
            partDesc[ii    ] = pColor.r;
            partDesc[ii + 1] = pDiffuse.r;
            partDesc[ii + 2] = pDiffuse.g;
            partDesc[ii + 3] = pDiffuse.b;
        }
    }
    
}
